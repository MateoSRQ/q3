import React from 'react';import style from './index.module.css'import log from 'loglevel';import Scrollable from 'react-custom-scrollbars';import Item from './item';interface Props {    keyId: string,    [x: string]: any};interface State {};export default class Component extends React.Component<Props> {    protected Item = Item;    constructor(props: Props) {        super(props);        log.info('List:constructor reached');        if (this.props.item) this.Item = this.props.item;    }    componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<{}>, snapshot?: any): void {        log.info('List:componentDidUpdate reached');    }    render() {        log.info('List:render reached');        let {data, item, keyId, ...props} = this.props;        let items = null;        if (data && data.data) {            // should have an interface            items = data.data.map((itemData: any) => {                return (<this.Item                    key={itemData[keyId]}                    data={itemData}/>                );            })        }        return (            <div className={[style.component].join(' ')} {...props}>                <Scrollable>                {items}                </Scrollable>            </div>        );    }}